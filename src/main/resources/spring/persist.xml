<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:property-placeholder location="classpath:spring/data-access.properties"
		system-properties-mode="OVERRIDE" />


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="${jdbc.driverClassName}" p:jdbcUrl="${jdbc.url}"
		p:user="${jdbc.username}" p:password="${jdbc.password}" />

	<beans profile="javaee">
		<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/myspring" />
	</beans>


	<beans profile="default,spring-data-jpa">
		<!-- JPA EntityManagerFactory -->
		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			p:dataSource-ref="dataSource">
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
					p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
			</property>
			<!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, 
				persistenceUnit will win -->
			<property name="persistenceUnitName" value="petclinic" />
			<property name="packagesToScan" value="com.sidney.myspring" />
		</bean>

		<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
			to JTA) -->
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
			p:entityManagerFactory-ref="entityManagerFactory" />


		<!-- Post-processor to perform exception translation on @Repository classes 
			(from native exceptions such as JPA PersistenceExceptions to Spring's DataAccessException 
			hierarchy). -->
		<bean
			class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

		<tx:annotation-driven transaction-manager="transactionManager" />

	</beans>

	<beans profile="jdbc">
		<!-- Transaction manager for a single JDBC DataSource (alternative to JTA) -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
			p:dataSource-ref="dataSource" />

		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<constructor-arg ref="dataSource" />
		</bean>

		<bean id="namedParameterJdbcTemplate"
			class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
			<constructor-arg ref="dataSource" />
		</bean>

		<context:component-scan base-package="com.sidney.myspring.repository.jdbc" />
		
		<tx:annotation-driven transaction-manager="transactionManager" />
		
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="*" propagation="REQUIRED" />
			</tx:attributes>
		</tx:advice>

	</beans>
	
	    <beans profile="default">
        <!--
            Loads JPA beans
            Will automatically be transactional due to @Transactional.
            EntityManager will be auto-injected due to @PersistenceContext.
            PersistenceExceptions will be auto-translated due to @Repository.
        -->
        <context:component-scan base-package="com.sidney.myspring.repository.jpa"/>
    </beans>

	<beans profile="ibatis">
	
		<context:component-scan base-package="com.sidney.myspring.repository.ibatis"/>

		<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"
			p:configLocation="classpath:**/SqlMapConfig.xml" p:dataSource-ref="dataSource" />

		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
			p:dataSource-ref="dataSource" />


	</beans>




</beans>
